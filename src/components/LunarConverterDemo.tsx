"use client";

import { useState } from "react";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Calendar, CalendarDays, Info } from "lucide-react";
import { LunarService } from "@/lib/lunarService";
import { LunarDate, LunarDetailInfo } from "@/types/reminder";

/**
 * Component demo ƒë·ªÉ showcase c√°c t√≠nh nƒÉng c·ªßa th∆∞ vi·ªán @nghiavuive/lunar_date_vi
 * Cho ph√©p chuy·ªÉn ƒë·ªïi gi·ªØa d∆∞∆°ng l·ªãch v√† √¢m l·ªãch, xem th√¥ng tin chi ti·∫øt
 */
export default function LunarConverterDemo() {
  const [solarDate, setSolarDate] = useState(
    new Date().toISOString().split("T")[0]
  );
  const [lunarDate, setLunarDate] = useState<LunarDate | null>(null);
  const [lunarDetailInfo, setLunarDetailInfo] =
    useState<LunarDetailInfo | null>(null);
  const [error, setError] = useState<string>("");

  // Chuy·ªÉn ƒë·ªïi t·ª´ d∆∞∆°ng l·ªãch sang √¢m l·ªãch
  const handleSolarToLunar = () => {
    try {
      setError("");
      const date = new Date(solarDate);

      // Ki·ªÉm tra ng√†y h·ª£p l·ªá
      if (isNaN(date.getTime())) {
        setError("Ng√†y d∆∞∆°ng l·ªãch kh√¥ng h·ª£p l·ªá");
        return;
      }

      // Chuy·ªÉn ƒë·ªïi
      const lunar = LunarService.convertSolarToLunar(date);
      const detail = LunarService.getLunarDetailInfo(date);

      setLunarDate(lunar);
      setLunarDetailInfo(detail);
    } catch (err) {
      console.error("L·ªói chuy·ªÉn ƒë·ªïi:", err);
      setError("C√≥ l·ªói x·∫£y ra khi chuy·ªÉn ƒë·ªïi");
    }
  };

  // Reset form
  const handleReset = () => {
    setSolarDate(new Date().toISOString().split("T")[0]);
    setLunarDate(null);
    setLunarDetailInfo(null);
    setError("");
  };

  // L·∫•y th√¥ng tin h√¥m nay
  const handleToday = () => {
    const today = new Date();
    setSolarDate(today.toISOString().split("T")[0]);
    handleSolarToLunar();
  };

  return (
    <div className="space-y-6">
      {/* Card chuy·ªÉn ƒë·ªïi */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-3">
            <Calendar className="h-6 w-6 text-blue-600" />
            Chuy·ªÉn ƒë·ªïi D∆∞∆°ng l·ªãch ‚Üî √Çm l·ªãch
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          {/* Input ng√†y d∆∞∆°ng l·ªãch */}
          <div className="space-y-2">
            <Label htmlFor="solar-date">Ng√†y d∆∞∆°ng l·ªãch:</Label>
            <div className="flex gap-2">
              <Input
                id="solar-date"
                type="date"
                value={solarDate}
                onChange={(e) => setSolarDate(e.target.value)}
                className="flex-1"
              />
              <Button onClick={handleSolarToLunar} className="px-6">
                Chuy·ªÉn ƒë·ªïi
              </Button>
            </div>
          </div>

          {/* Buttons ti·ªán √≠ch */}
          <div className="flex gap-2">
            <Button variant="outline" onClick={handleToday} size="sm">
              H√¥m nay
            </Button>
            <Button variant="outline" onClick={handleReset} size="sm">
              Reset
            </Button>
          </div>

          {/* Hi·ªÉn th·ªã l·ªói */}
          {error && (
            <div className="p-3 bg-red-50 border border-red-200 rounded-lg">
              <p className="text-red-700 text-sm">{error}</p>
            </div>
          )}
        </CardContent>
      </Card>

      {/* Card k·∫øt qu·∫£ √¢m l·ªãch */}
      {lunarDate && (
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center gap-3">
              <CalendarDays className="h-6 w-6 text-red-600" />
              K·∫øt qu·∫£ √Çm l·ªãch
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            {/* Ng√†y √¢m l·ªãch c∆° b·∫£n */}
            <div className="p-4 bg-red-50 rounded-lg border border-red-200">
              <p className="text-2xl font-bold text-red-700 mb-2">
                {LunarService.getLunarDateText(lunarDate)}
              </p>
              <p className="text-sm text-red-600">
                ƒê·ªãnh d·∫°ng: {LunarService.formatLunarDate(lunarDate)}
              </p>
              {lunarDate.isLeapYear && (
                <p className="text-sm text-orange-600 mt-1">
                  ‚ú® NƒÉm nhu·∫≠n √¢m l·ªãch
                </p>
              )}
            </div>

            {/* Th√¥ng tin chi ti·∫øt */}
            {lunarDetailInfo && (
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                {/* Can Chi */}
                <div className="p-3 bg-blue-50 rounded-lg border border-blue-200">
                  <h4 className="font-semibold text-blue-800 mb-2 flex items-center gap-2">
                    <Info className="h-4 w-4" />
                    Can Chi
                  </h4>
                  <div className="space-y-1 text-sm text-blue-700">
                    <p>
                      <strong>NƒÉm:</strong> {lunarDetailInfo.yearName}
                    </p>
                    <p>
                      <strong>Th√°ng:</strong> {lunarDetailInfo.monthName}
                    </p>
                    <p>
                      <strong>Ng√†y:</strong> {lunarDetailInfo.dayName}
                    </p>
                    <p>
                      <strong>Gi·ªù:</strong> {lunarDetailInfo.hourName}
                    </p>
                  </div>
                </div>

                {/* Th√¥ng tin kh√°c */}
                <div className="p-3 bg-green-50 rounded-lg border border-green-200">
                  <h4 className="font-semibold text-green-800 mb-2 flex items-center gap-2">
                    <Info className="h-4 w-4" />
                    Th√¥ng tin kh√°c
                  </h4>
                  <div className="space-y-1 text-sm text-green-700">
                    <p>
                      <strong>Th·ª©:</strong> {lunarDetailInfo.dayOfWeek}
                    </p>
                    {lunarDetailInfo.solarTerm && (
                      <p>
                        <strong>Ti·∫øt kh√≠:</strong> {lunarDetailInfo.solarTerm}
                      </p>
                    )}
                  </div>
                </div>
              </div>
            )}

            {/* Gi·ªù ho√†ng ƒë·∫°o */}
            {lunarDetailInfo?.luckyHours &&
              lunarDetailInfo.luckyHours.length > 0 && (
                <div className="p-4 bg-yellow-50 rounded-lg border border-yellow-200">
                  <h4 className="font-semibold text-yellow-800 mb-3">
                    üåü Gi·ªù ho√†ng ƒë·∫°o trong ng√†y:
                  </h4>
                  <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-2">
                    {lunarDetailInfo.luckyHours.map((hour, index) => (
                      <div
                        key={index}
                        className="p-2 bg-yellow-100 text-yellow-800 rounded text-center"
                      >
                        <div className="font-semibold">{hour.name}</div>
                        <div className="text-xs">
                          {hour.time[0]}:00 - {hour.time[1]}:00
                        </div>
                      </div>
                    ))}
                  </div>
                  <p className="text-xs text-yellow-700 mt-2">
                    üí° C√°c gi·ªù ho√†ng ƒë·∫°o th√≠ch h·ª£p cho vi·ªác kh·ªüi s·ª±, l√†m vi·ªác
                    quan tr·ªçng
                  </p>
                </div>
              )}
          </CardContent>
        </Card>
      )}

      {/* Card h∆∞·ªõng d·∫´n */}
      <Card>
        <CardHeader>
          <CardTitle className="text-lg">üìö H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-2 text-sm text-gray-600">
            <p>
              ‚Ä¢ Ch·ªçn ng√†y d∆∞∆°ng l·ªãch v√† nh·∫•n "Chuy·ªÉn ƒë·ªïi" ƒë·ªÉ xem th√¥ng tin √¢m
              l·ªãch t∆∞∆°ng ·ª©ng
            </p>
            <p>
              ‚Ä¢ Th√¥ng tin bao g·ªìm: ng√†y √¢m l·ªãch, can chi, ti·∫øt kh√≠, gi·ªù ho√†ng
              ƒë·∫°o
            </p>
            <p>
              ‚Ä¢ S·ª≠ d·ª•ng th∆∞ vi·ªán{" "}
              <code className="bg-gray-100 px-1 rounded">
                @nghiavuive/lunar_date_vi
              </code>{" "}
              cho ƒë·ªô ch√≠nh x√°c cao
            </p>
            <p>‚Ä¢ H·ªó tr·ª£ nƒÉm nhu·∫≠n v√† th√°ng nhu·∫≠n √¢m l·ªãch</p>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}
